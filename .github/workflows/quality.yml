name: Quality Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
    # Étape pour récupérer le code source
    - name: Checkout repository
      uses: actions/checkout@v3

    # Étape pour configurer Java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Installation des dépendances système pour ChromeHeadless
    - name: Install Chrome Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libappindicator3-1 fonts-liberation libasound2 libnss3 libxss1 xdg-utils libatk-bridge2.0-0 libgtk-3-0

    # Étape de compilation et de génération du rapport de couverture pour le back-end
    - name: Build and Generate Coverage Report (Back-end)
      run: mvn -f back/pom.xml clean verify jacoco:report

    # Étape pour convertir le rapport JaCoCo (XML) en LCOV
    - name: Convert JaCoCo Report to LCOV
      working-directory: ./back
      run: |
        pip install jacoco2lcov
        jacoco2lcov target/site/jacoco/jacoco.xml > jacoco.lcov

    # Étape pour exécuter les tests front-end et générer la couverture
    - name: Run Tests and Generate Coverage (Front-end)
      working-directory: ./front
      run: |
        npm install
        npm run test -- --code-coverage

    # Vérification de l'existence des rapports LCOV
    - name: Verify Coverage Reports
      run: |
        if [ ! -f front/coverage/bobapp/lcov.info ]; then
          echo "Error: Front-end coverage file not found."
          exit 1
        fi
        if [ ! -f back/jacoco.lcov ]; then
          echo "Error: Back-end coverage file not found."
          exit 1
        fi

    # Fusion des rapports LCOV
    - name: Combine Coverage Reports
      working-directory: ./
      run: |
        lcov -a back/jacoco.lcov -a front/coverage/bobapp/lcov.info -o combined-coverage.info

    # Étape d'analyse SonarCloud avec le rapport fusionné
    - name: SonarCloud Scan (Unified)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: ./
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=nolloV_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.organization=nollov \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.sources=back/src,front/src \
          -Dsonar.typescript.lcov.reportPaths=combined-coverage.info \
          -Dsonar.exclusions=front/src/polyfills.ts
