name: Quality Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
    # Étape pour récupérer le code source
    - name: Checkout repository
      uses: actions/checkout@v3

    # Étape pour configurer Java 17 pour le Back-end
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Installation des dépendances système pour ChromeHeadless (pour le Front-end)
    - name: Install Chrome Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libappindicator3-1 fonts-liberation libasound2 libnss3 libxss1 xdg-utils libatk-bridge2.0-0 libgtk-3-0

    # Compilation et génération du rapport de couverture pour le Back-end
    - name: Build and Generate Coverage Report (Back-end)
      working-directory: ./back
      run: mvn clean verify jacoco:report

    # Analyse SonarCloud pour le Back-end
    - name: SonarCloud Scan (Back-end)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN2 }}
      working-directory: ./back
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=nollov_bobapp-back \
          -Dsonar.organization=nollov \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=src \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.junit.reportPaths=target/surefire-reports \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

    # Installation des dépendances et exécution des tests pour le Front-end
    - name: Run Tests and Generate Coverage (Front-end)
      working-directory: ./front
      run: |
        npm install
        npm run test -- --code-coverage

    # Vérification de l'existence du fichier lcov.info pour le Front-end
    - name: Verify Front-end Coverage Report
      working-directory: ./front
      run: |
        if [ ! -f coverage/bobapp/lcov.info ]; then
          echo "Error: Coverage file not found at coverage/bobapp/lcov.info"
          exit 1
        fi

    # Analyse SonarCloud pour le Front-end
    - name: SonarCloud Scan (Front-end)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: ./front
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=nolloV_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD\
          -Dsonar.organization=nollov \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=src \
          -Dsonar.tests=src \
          -Dsonar.test.inclusions=src/**/*.spec.ts \
          -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info \
          -Dsonar.exclusions=src/polyfills.ts,src/environments/**/*.ts
